version: '3.9'
services:
  # app:
  #   image: gedai/app
  #   build:
  #     context: .
  #   container_name: gedai-app
  #   environment:
  #     NODE_ENV: 'development'
  #     PORT: '3000'
  #     LOG_LEVEL: 'debug'
  #     APP_NAME: 'dummy-world-service'
  #     APP_DESCRIPTION: 'Dummy Service World'
  #     APP_VERSION: '1.0.0'
  #     ROUTE_PREFIX: ''
  #     MONGO_URL: 'mongodb://gedai:gedai@host.docker.internal:27017/nestjs-cqrs-ddd?authSource=admin'
  #     AMQP_URL: 'amqp://gedai:gedai@host.docker.internal:5672'
  #     AMQP_EXCHANGE_EVENT_ROOT: 'events'
  #   ports:
  #     - 3000:3000
  rabbitmq:
    image: gedai/rabbitmq:3-management-delayed
    build:
      context: ./localstack
      dockerfile: ./Dockerfile.rabbitmq
    container_name: gedai-rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: 'gedai'
      RABBITMQ_DEFAULT_PASS: 'gedai'
    ports:
      - 5672:5672
      - 15672:15672
  mongodb:
    image: gedai/mongodbrs:6
    build:
      context: ./localstack
      dockerfile: ./Dockerfile.mongodb
    container_name: gedai-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'gedai'
      MONGO_INITDB_ROOT_PASSWORD: 'gedai'
    command: 'mongod --replSet rs0 --keyFile /opt/.keyfile/keyfile --bind_ip_all'
    ports:
      - 27017:27017
  mongodb_init:
    image: mongo:6
    container_name: gedai-mongodb-init
    restart: 'no'
    depends_on: [mongodb]
    command: >-
      sh -c "sleep 5 && mongosh -u gedai -p gedai --host mongodb:27017 --eval 'rs.initiate({
        \"_id\":\"rs0\",
        "members":[
          {
            \"_id\": 0,
            \"host\":\"localhost:27017\",
          }
        ]
      })'"
  # kong_postgresdb:
  #   image: postgres:16
  #   container_name: gedai-kong-postgresdb
  #   environment:
  #     POSTGRES_DB: kong
  #     POSTGRES_USER: kong
  #     POSTGRES_PASSWORD: kong
  # kong_init:
  #   image: kong/kong-gateway:3.6.0.0
  #   container_name: gedai-kong-init
  #   depends_on: [kong_postgresdb]
  #   restart: on-failure
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: gedai-kong-postgresdb
  #     KONG_PG_PASSWORD: kong
  #     KONG_PASSWORD: kong
  #   command: 'kong migrations bootstrap'
  # kong_gateway:
  #   image: kong/kong-gateway:3.6.0.0
  #   container_name: gedai-kong
  #   depends_on: [kong_init]
  #   restart: on-failure
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: gedai-kong-postgresdb
  #     KONG_PG_PASSWORD: kong
  #     KONG_PASSWORD: kong
  #     KONG_LICENSE_DATA: ''
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001
  #     KONG_ADMIN_GUI_URL: http://localhost:8002
  #   ports:
  #     - 8000:8000 # Gateway Proxy
  #     - 8443:8443
  #     - 8001:8001 # Managment API
  #     - 8444:8444
  #     - 8002:8002 # Management UI
  #     - 8445:8445
  #     - 8003:8003
  #     - 8004:8004
